include:
  - project: "landbay/devops/ci/ci_pipeline"
    ref: "kviklet-docker-deploy"
    file:
      - gitlab-eks/common/rules.yml
      - gitlab-eks/common/jobs/job_pull_pipeline_functions.yml
      - gitlab-eks/common/jobs/job_notify_user_on_error.yml
      - gitlab-eks/common/gitlab_eks_resources.yml


default:
  image:
    name: $AWS_ECR_REPOSITORY/landbay/devops/ci/ci-pipeline-images/devops:latest

workflow:
  rules:
    - !reference [ .only-if-landbay, rules ]
    - !reference [ .if-manually-triggered-from-ui, rules ]
    - !reference [ .if-master-branch, rules ]
    - !reference [ .if-a-merge-request-pipeline, rules ]


variables:
  JAVA_VERSION: 17
  NODE_VERSION: 20
  CI_PIPELINE_BRANCH: kviklet-docker-deploy
  BASE_REPOSITORY_PATH: "${AWS_ECR_REPOSITORY}/landbay/${CI_PROJECT_NAME}"
  TAG_BUILD_LATEST: "ci-${CI_COMMIT_REF_NAME}-latest"
  TAG_BUILD_NUMBER: "ci-${CI_COMMIT_REF_NAME}-${CI_JOB_ID}"

stages:
  - build
  - deploy

build_and_push_image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  extends:
    - .gitlab-eks-lg-build
  stage: build
  before_script:
    - source ./.ci/init-kaniko.sh
  script:
    - echo $BASE_REPOSITORY_PATH
    - echo $TAG_BUILD_LATEST
    - echo $TAG_BUILD_NUMBER
    - /kaniko/executor --context . --dockerfile "Dockerfile" --destination ${BASE_REPOSITORY_PATH}":"${TAG_BUILD_LATEST} --destination ${BASE_REPOSITORY_PATH}":"${TAG_BUILD_NUMBER}


#DEPLOY TO UAT
deploy_to_uat:
  stage: deploy
  environment:
    name: uat
    deployment_tier: staging
  rules:
    - !reference [ .if-master-branch, rules ]
  before_script:
    - export FLUX_INFRA_FILENAME="70_kviklet"
    - export SERVICE_NAME="kviklet"
  script:
    - source $CI_DEVOPS_FUNCTIONS/deploy_docker_image.sh
    - echo "deploy uat stage"
    - deploy_service uat $SERVICE_NAME $FLUX_INFRA_FILENAME $BASE_REPOSITORY_PATH $TAG_BUILD_NUMBER "gitlab"


#DEPLOY TO PROD